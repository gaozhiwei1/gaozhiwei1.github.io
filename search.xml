<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/06/08/wen-jian/"/>
      <url>2021/06/08/wen-jian/</url>
      
        <content type="html"><![CDATA[<p>每个表格由 table 标签开始。</p><p>每个表格行由 tr 标签开始。</p><p>每个表格数据由 td 标签开始。</p><h4>一列：</h4><table border="1"><tbody><tr>  <td>100</td></tr></tbody></table><h4>一行三列：</h4><table border="1"><tbody><tr>  <td>100</td>  <td>200</td>  <td>300</td></tr></tbody></table><h4>两行三列：</h4><table border="1"><tbody><tr>  <td>100</td>  <td>200</td>  <td>300</td></tr><tr>  <td>400</td>  <td>500</td>  <td>600</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux部分shell命令</title>
      <link href="2021/06/07/shell/"/>
      <url>2021/06/07/shell/</url>
      
        <content type="html"><![CDATA[<h3 id="Vi-编辑器"><a href="#Vi-编辑器" class="headerlink" title="Vi 编辑器"></a>Vi 编辑器</h3><style type="text/css">        table{        border-collapse:collapse;        table-layout:fixed;        border-radius:5px;        overflow:hidden;        margin: 10px auto;        border:2px solid #70aefb ;        background-color: #328ef4;        color: #c7dafb;        }     table td,th{        /* padding: 5px;        width: 33%; */        text-align: center;        border:1px solid #70aefb ;        vertical-align:middle;        /* font-size: 15px; */        width: 80%;    }             .table-color-green{         background-color: green;          }          .table-color-grey{              background-color:  #696969;     }           .table-color-black{              background-color: black;     }          .jt-up-color{       color:red;     }          .parent-position{         position: relative;     }          .child-position{             position: absolute;            right: 0;            bottom: 0;     }          .main-font{             font-size: 23px;     }</style><h4 id="1-进入插入模式"><a href="#1-进入插入模式" class="headerlink" title="1.进入插入模式"></a>1.进入插入模式</h4><table><thead><tr><th align="center">命令</th><th>功能</th></tr></thead><tbody><tr><td align="center">i</td><td>从光标当前所在位置之前开始插入</td></tr><tr><td align="center">a</td><td>从光标当前所在位置之后开始插入</td></tr><tr><td align="center">I</td><td>在光标所在行的行首插入</td></tr><tr><td align="center">A</td><td>在光标所在行的末尾插入</td></tr><tr><td align="center">o</td><td>在光标所在行的下面新开一行插入</td></tr><tr><td align="center">O</td><td>在光标所在行的上面新开一行插入</td></tr><tr><td align="center">s</td><td>删除光标位置的一个字符，然后进入插入模式</td></tr><tr><td align="center">S</td><td>删除光标坐在的行，然后进入插入模式</td></tr></tbody></table><h4 id="2-命令操作模式"><a href="#2-命令操作模式" class="headerlink" title="2.命令操作模式"></a>2.命令操作模式</h4><table>    <tbody><tr>        <th>类型</th>        <th>命令</th>        <th>功能</th>      </tr>    <tr>        <td rowspan="9">type</td>        <td>text</td>        <td>单行文本输入框</td>    </tr>    <tr>        <td>password</td>        <td>密码输入框</td>    </tr>    <tr>        <td>radio</td>        <td>单选按钮</td>    </tr>    <tr>        <td>CheckBox</td>        <td>复选按钮</td>    </tr>    <tr><td>button</td>        <td>普通按钮</td>    </tr>    <tr>        <td>submit</td>        <td>提交按钮</td>    </tr>    <tr>        <td>reset</td>        <td>重置按钮</td>    </tr>    <tr>        <td>image</td>        <td>图像形式的提交按钮</td>    </tr>    <tr>        <td>file</td>        <td>文件域</td>    </tr>    <tr>        <td>name</td>        <td>用户自定义</td>        <td>控件名称</td>    </tr>    <tr>        <td>value</td>        <td>用户自定义</td>        <td>默认文本值</td>    </tr>    <tr>        <td>size</td>        <td>正整数</td>        <td>控件在页面中的显示宽度</td>    </tr>    <tr>        <td>checked</td>        <td>checked</td>        <td>定义选择控件默认被选中项</td>    </tr>    <tr>        <td>maxlength</td>        <td>正整数</td>        <td>控件允许输入的最多字符</td>    </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乌合之众</title>
      <link href="2021/06/07/wuhezhizhong/"/>
      <url>2021/06/07/wuhezhizhong/</url>
      
        <content type="html"><![CDATA[<p><font face="kaiti" size="4"><strong>  真正的历史变革，并不是那些以宏伟和暴力的场景令我们震惊的事情。能够令文化实现伟大复兴的唯一重要的变化，是对思想，观念和信仰产生影响的变化。令人印象深刻的历史事件只不过是人类思想的无形变化产生的有形结果而已。</strong><br></font></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>激荡三十年读书摘抄</title>
      <link href="2021/06/03/yueduxinde/"/>
      <url>2021/06/03/yueduxinde/</url>
      
        <content type="html"><![CDATA[<p><font face="楷体" size="4.5"> <strong>  在中国，经济改革的成功并非国家治理的唯一目标，它从来被置于稳固执政地位和维护国家安全的两大前提之下，因此，有着高于经济发展的“人为计划性”和别于他国的中国特色。</strong><br></font><br><br><br><font face="楷体" size="4"> <strong>  中国拥有强大的政府，能够有效快速的落实各种民生政策，但它仍需要在法治和民主上继续努力；而美国虽有法治和民主，但由于制衡体系过于庞杂繁复，“制衡效率太高”，导致联邦政府的施政能力低下。</strong><br></font><br><br><br><font face="楷体" size="4"> <strong>  透过本部企业史所描述的无数细节，我们可以发现，在缺乏长期性顶层设计的前提下，中国经济变革的动力来自以下四个方面。<br>    制度创新——四十年来，恢复及确立市场在资源配置中的角色和作用，一直是中国治理者在持续探索的方向，其间的稚嫰，反复及彷徨，构成了改革的所有戏剧性。与其他市场经济国家不同的是，中国政府始终没有放弃国有资本集团在国民经济中的控制力，这也成为制度创新的最大不确定性。<br>    容忍非均衡——中国改革的非均衡性特征和“灰度治理”，是打破计划经济体制的独特秘诀。它包括“让一部分人先富起来”，东南沿海优先发展，给予外资集团的超国民待遇，甚至还有对环境破坏的长期容忍，对农民工群体的利益剥夺，以及民营企业家对现行法律的突破。<br>    规模效应——庞大的人口规模为中国的创业者提供了巨大的成长红利，这使得每一个产业的进入者否有机会以粗放的方式完成自己的原始积累，然后在此基础上，建立核心竞争力。“巨国效应”及规模可能形成的势能，无论是产能，消费力，还是资本能力，往往以其出其不意的方式创造出新的可能性和模式突变。<br>    技术壁垒——相对于制度创新的反复性，技术的不可逆性打破了既得利益集团的准入性壁垒，从而重构产业范式，并倒逼体制内改革。这一特征在改革的前三十年并不突出，然而，随着互联网的崛起，很多产业的原有基础设施遭到毁灭性打击，带来了竞争格局的焕然一新。在可以预见的未来，技术的破壁能力将在更多的领域中持续发酵。</strong></font><br> <br><br><font face="楷体" size="4"> <strong>  由此，你惊奇的发现，貌似毫无路线预设的中国改革，实则一直有一条强大的市场化内在逻辑。如同大江之浩荡东流，其间曲折百回，冲决无碍，惊涛与礁石搏斗，旧水与新流争势，时而江平潮阔，时而床高岸低，但是，趋势之顽强，目的之确然，却非任何人可以抵挡。</strong><br></font><br><br><br><font face="楷体" size="4"> <strong>  有人叹息青春散场，历史已经结束，也有人吟唱“世界如此之新，一切尚未命名”。<br>    对于这一段尚未结束的当代史，必须摆脱历史宿命论，承认历史发展的戏剧性和人的主动性。我们应该相信科学史家伯纳德的看法，他说：“对那些与事先设计的模式不相吻合的事实，要予以特殊的注意”。创造意味着背叛和分离，也就是说，新的发生总是伴随着不适感和不确定的可能性。</strong><br></font></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl 安装及python环境配置</title>
      <link href="2021/06/03/wsl/"/>
      <url>2021/06/03/wsl/</url>
      
        <content type="html"><![CDATA[<p>本篇博客我将介绍如何安装wsl以及其中的python环境配置，需要读者具备一定的linux操作系统知识，以及python基本知识。</p><h3 id="1-开启虚拟机及wsl平台"><a href="#1-开启虚拟机及wsl平台" class="headerlink" title="1 开启虚拟机及wsl平台"></a>1 开启虚拟机及wsl平台</h3><p>首先搜索cmd进入命令行工具，开启windows中wsl和虚拟机功能，命令行如下</p> <pre class="line-numbers language-none"><code class="language-none">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-LinuxEnable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在此之后，重启电脑，并按顺序打开：控制面板-&gt; 卸载程序-&gt;启用或关闭Windows功能到如下界面、</p><p><img src="/images/1.png"></p><h3 id="2-下载Ubuntu"><a href="#2-下载Ubuntu" class="headerlink" title="2.下载Ubuntu"></a>2.下载Ubuntu</h3><p>到Windows应用商店下载ubuntu-20.04最新版，下载后点击安装，会弹出设置unixname以及两次设置密码功能，按照步骤下载安装即可，下载完ubuntu默认安装目录为</p><pre class="line-numbers language-none"><code class="language-none">C:\Users\Admin\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>简要搜索方式为下图</p><p><img src="/images/2.png"></p><h3 id="3-配置python环境"><a href="#3-配置python环境" class="headerlink" title="3.配置python环境"></a>3.配置python环境</h3><p>安装完ubuntu后，其中是自带python环境的，这么建议不要更改默认源，后面有可能会出现很大的问题（血的教训），进入ubuntu中，依次输入一下命令，利用vscode编译python。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt-get</span> update$ <span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-pip <span class="token comment">#安装python3的pip命令</span>$ pip3 <span class="token function">install</span> numpy matplotlib$ <span class="token function">mkdir</span> python_files <span class="token comment">#在/home/username目录下创建python_files文件夹</span>$ <span class="token builtin class-name">cd</span> python_files$ code <span class="token builtin class-name">.</span>  <span class="token comment">#下载vscode,注意code命令后的空格</span>$ <span class="token function">sudo</span> <span class="token function">chmod</span> -R <span class="token number">777</span> /home/<span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>/python_files <span class="token comment">#获得修改，增加文件的权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上命令将帮助你进入到vscode中，建立简单的python文件，按F5编译，提示安装python编译扩展，安装后便可成功编译，如下图<br><img src="/images/3.png"></p><h3 id="4-配置Python绘图环境"><a href="#4-配置Python绘图环境" class="headerlink" title="4.配置Python绘图环境"></a>4.配置Python绘图环境</h3><p>此时利用python进行绘图是不能显示的，需要另外配置gui，进入到ubuntu原始目录下,输入cd,然后输入以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入到.bashrc文件下，到文件最下方添加如下两行</p><pre class="line-numbers language-none"><code class="language-none">export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0export LIBGL_ALWAYS_INDIRECT=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>按Esc键，和:wq命令保存上述修改。而后进入命令行使文件生效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来安装简易桌面，进入<a href="https://sourceforge.net/projects/vcxsrv/">Vcxsrv</a>页面下载该工具，一路默认安装，而后打开，见到如下页面<br><img src="/images/4.png"></p><p>上面最后一个一定要勾上。接下来运行命令行安装xfce4</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> xfce4$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> xfce4-terminal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> x11-apps$ xeyes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果出现一对眼睛，则便是安装成功。接下来安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3.8-tk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次编译python文件，便可绘图，如遇到缺少字体，百度输入报错命令，安装字体即可。</p><h3 id="5-将WSL迁移到D盘"><a href="#5-将WSL迁移到D盘" class="headerlink" title="5.将WSL迁移到D盘"></a>5.将WSL迁移到D盘</h3><p>因为C盘是系统盘，后面WSL内存可能相当大，因此很不方便，这里我们将WSL迁到D盘，首先我们在D盘下创建文件夹wsl。后面我们进入到<a href="https://github.com/DDoSolitary/LxRunOffline/releases">lxrunoffline</a>官网中下载如下工具</p><p><img src="/images/5.png"></p><p>解压到d盘下，同时配置系统的path变量，变量为D:\LxRunOffline-v3.5.0-msvc，而后进入cmd，输入lxrunoffline，如果没报错，则安装成功。后面再cmd中输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ wsl --shutdown<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>暂时关闭wsl<br>而后运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ LxRunOffline move -n Ubuntu-20.04 -d D:<span class="token punctuation">\</span>wsl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等待一段时间，如果wsl文件夹中出现映射文件则代表安装正确，接下来就可以愉快的使用python进行编程了，后续还会有更新，请大家保持持续关注。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mmdet框架搭建过程</title>
      <link href="2021/06/01/hello-world/"/>
      <url>2021/06/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>本篇博客我将介绍如何在WSL2环境下利用vscode搭建mmdet环境，该环境是用来执行深度学习目标检测任务，常见算法由faster-rcnn以及yolo目标检测算法系列，在阅读本博客之前，你的配置应当包括wsl2系统以及python编译环境。</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
